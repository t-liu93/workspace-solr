{
{
"id":"789bfeaab765a0c15af2c09d38439c269d34654b",
"feature":"think",
"message":["Patch Set 3:

Good catch, I think the null check was lost from ReleasePrimitiveArray. I wanted avoid the boiler plate null-check and ScopedObjectAccess. I noticed I hadn't cleaned this up for GetPrimitiveArray. I'll tidy that, check for null and add tests."]
},
{
"id":"77df184a579fb50b9378647c3e5cb1e3e29d808b",
"feature":"might",
"message":["Patch Set 1: Looks good to me, but someone else must approve

Might be better to let icu4c team to look over this change, in case."]
},
{
"id":"e182a1b7a3592d4c764054fce2be48ee5816cd6f",
"feature":"could",
"message":["Patch Set 1:

I have no idea why are enforcing this warning, and I don't think anyone can argue for it.

I would be very happy if we could remove it from the master makefile.

Anyway, submitting this one."]
},
{
"id":"e9f48de6a29514f9d9218c87ee810de2ae4032df",
"feature":"some",
"message":["Patch Set 3:

(4 comments)

PS3 add some more fixes (thanks Vladimir!)."]
},
{
"id":"86cbc3343bd843c0378e0325df3c232db21dc611",
"feature":"can",
"message":["Patch Set 3: Code-Review+2

Thanks for trying to add a regression test.  We generally require them, but I understand it can be problematic when the necessary setup only occurs with old dx output."]
},
{
"id":"0151f2bba501e557c6699206ea48af9b3cd629b7",
"feature":"see",
"message":["Patch Set 2:

@enh @mark do you guys see any ample hatred on this where you want me to abandon, or are you (or others) ok with this?

I'm starting docs yesterday and I want to know if we are going to require passwd/group/fs_config_files/fs_config_dirs (or some combo of those) as a separate explicit set on PRODUCT_PACKAGES"]
},
{
"id":"efc917cf4b7e34d34cf402b4e82619e88cbbc26f",
"feature":"maybe",
"message":["Patch Set 4:

> > > > > (1 comment)
 > > > > >
 > > > > > A memory leak is whenever you allocate memory that was
 > never
 > > > > freed
 > > > > > before the program exits. Granted, change contexts for
 > things
 > > > out
 > > > > > of userspace. The folks and valgrind and ASAN would agree,
 > > > > > considering their tools report it as a leak.
 > > > > >
 > > > > > So now lets say, you have a test bed that uses ASAN or
 > > valgrind
 > > > > and
 > > > > > your project has a dependency on libselinux. Both tools
 > will
 > > > > cause
 > > > > > a non zero exit status and complain about losing 1 block of
 > > 15
 > > > > > bytes.
 > > > >
 > > > > 15 bytes ey? Then maybe we could set the version_buffer size
 > to
 > > -
 > > > > say - 32 instead of 256? Other than that LGTM.
 > > >
 > > > It's actually 17. We could, but I would rather make this bigger
 > > > than smaller, so if PCRE version strings get huge, we don't
 > have
 > > to
 > > > bump this up, but I really don't care.
 > > >
 > > > What is your plan on upstreaming the PCRE2 changes?
 > >
 > > Very much in favor. It kind of got lost in priorities.
 > 
 > We would really want to make sure this is upstreamed, again, trying
 > to kill off the Android fork. I'm not sure how far off sds and
 > Richard are from achieving that offhand.

I prepared a patch against upstream[1]. Note: I added your memory leak patch keeping your authorship intact, I hope you approve. This should be a good starting point. As you have contributed to libselinux before, may I ask you what the best way is to move forward with this?
[1] https://github.com/werwurm/selinux/tree/add_pcre2_support"]
},
{
"id":"5c8ff6ba79b9fb52432880351427a208df25f274",
"feature":"looks",
"message":["Patch Set 9: Looks good to me, approved

"]
},
{
"id":"eac111bbeb3dc2f79b19dce5c8ce520df9556aba",
"feature":"will",
"message":["Patch Set 1:

(1 comment)

you will need to adjust the tests as well."]
},
{
"id":"db900d345fd4bd3a297f4e00294d5b554374d48f",
"feature":"will",
"message":["Patch Set 2:

Yes.  I will do so (in 24hr.)"]
},
{
"id":"01893dabe2571f42705a5ab51bf00cf17e03608f",
"feature":"should",
"message":["Patch Set 1:

I disagree with your arguments for couple reasons:
1. Documentation for MediaMuxer.addTrack() doesn't state that the format needs to contain CSD and how it should be structured
2. The write process doesn't fail imediately if you add track without CSD. In fact it doesn't fail until you try to stop the muxer and then you get the "IllegalStateException" without any details regarding the problem!
3. The documentation of MediaCodec.BUFFER_FLAG_CODEC_CONFIG doesn't say that's in not supported by MediaMuxer
4. MediaMuxer doesn't thorow exception when you pass a config buffer to it.

Given the above, I think that either documentation should be updated and appropriate exceptions should be thrown or this change should be accepted."]
},
{
"id":"c0110c3db460556359d44ecd6e704d4418848098",
"feature":"very",
"message":["Patch Set 1: Abandoned

This change's most recent recorded activity is before the release of Gingerbread. That means that this change is very far from the bleeding edge, and most probably doesn't apply to the latest versions.

We're focusing our efforts on the more recent changes (i.e. the ones that have been active since the latest major platform release), and we're abandoning old changes to clarify that focus.

We're sorry that we never got a chance to accept your contribution when it was first uploaded.

It's possible that we're overzealous. If this change still applies to the latest AOSP master, please restore it or upload a replacement change.

Thanks for understanding."]
},
{
"id":"95af74c118a378c69e92b8e76d2abb7d1be4085a",
"feature":"seems",
"message":["Abandoned

This seems to have been fixed differently in the 5.0 release in commit 54b0bc74."]
},
{
"id":"5a3335311ed86d54c56dd5b1830d8539fbe8e653",
"feature":"should",
"message":["Patch Set 2:

It should be good now."]
},
{
"id":"9cfe6deaab04b284404d75a419bd8d7c0c5f923a",
"feature":"seems",
"message":["Patch Set 1: Code-Review+1

(2 comments)

Thanks for your digging this! It seems good for this change, but I have some consideration...)"]
},
{
"id":"de321ecdbb3fe0f2f1812b11429958f3036471b1",
"feature":"suggested",
"message":["Patch Set 2:

Stupid gerrit, I don't know how to upload my reply the the comment :(, anyway I moved the mask as you suggested"]
},
{
"id":"66139c071cd78ad269cf052c2a174c30653fb1f0",
"feature":"very",
"message":["Patch Set 1:

Any chance of merging in CAF's changes of any kk branch here: https://www.codeaurora.org/cgit/quic/la/platform/bionic/?h=kk_2.7.1 and this commit: http://review.cyanogenmod.org/#/c/54822/?

Their changes work well on Krait and non-Krait targets alike.  Oddly enough, some people at XDA flashed crespo with binaries Qualcomm's bionic (obviously, the code is restricted by mks and ifdefs on the code) and it worked very well, doubled benchmarks and they said performance was doubled as well.

Works great on my Optimus G and works great on Nexus 4's and all kinds of other devices."]
},
{
"id":"5ded9e5ee52286c6fcba31896b0fcf79ce23ba58",
"feature":"would",
"message":["Patch Set 2: Verified+1

I figured this would be easy to implement, in case we want to adopt it as a solution to the DBus permission problem. Tested and works as intended on brilloemulator_arm."]
},
{
"id":"c58d2484ac0aec56cbd57f268306c94f6985a5e4",
"feature":"found",
"message":["Patch Set 1:

Finally found the culprit, which previously depended on the insert-on-Get-if-nonexistant map behavior."]
},
{
"id":"0b84397d0c350b76e1fa5841e2377b1aa6a27e2e",
"feature":"very",
"message":["Patch Set 1:

(2 comments)

PTAL. I ended up doing this slightly differently. Setting a field inside HttpEngine#connected( ) would end up making Policy a "two way" interface. I don't think that's a very clean design. What do you think ?"]
},
{
"id":"6b1c8e2ce0dc8bbc95c444a98ea46f829e1685c5",
"feature":"might",
"message":["Patch Set 1: Code-Review-1

This patch is not needed in AOSP because osi_malloc takes a size_t, which is large enough to handle when a uint16_t might overflow.  The compiler should implicitly convert to size_t."]
},
{
"id":"c3dc25c9ead1abb36fff1b4a0868ce7b0638462a",
"feature":"can",
"message":["Patch Set 2:

I am no longer working on Android. 

Hi, Angus, 
Can you help me triage this CL ? Thanks."]
},
{
"id":"71e9950b79a5c8cc63f2dcfb0955239f42ac22ff",
"feature":"about",
"message":["Patch Set 2:

ptal,

I forgot to handle instanceof and checkcast previously, so PS3 adds support for them. It also fixes a wrong assumption in the reference type propagation about the type of the loaded class."]
},
{
"id":"ff6dd8f13920608001c71598594a120037831606",
"feature":"will",
"message":["Patch Set 2:

inheriting +2, we will check next canary run."]
},
{
"id":"f6167eaf6f2bc7210ab2780a649c6d0251209b12",
"feature":"finding",
"message":["Patch Set 4:

The UI issue shown in the screenshot in my first comment still exists in 4.2.1.

JBQ: Did you have any luck finding the proper reviewers for Swedish translations yet? I know that you are busy. :)"]
},
}